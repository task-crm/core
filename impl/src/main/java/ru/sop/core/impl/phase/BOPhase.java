package ru.sop.core.impl.phase;

import ru.sop.core.impl.model.bo.BO;
import ru.sop.core.impl.model.bo.BOCommand;

/**
 * Фаза бизнес объекта. Интерфейс для классов, которые будут реализовывать фазы бизнес объекта.
 */
public interface BOPhase {

    /**
     * Метод вызывается перед созданием/обновлением бизнес объекта. Объект изменяется с каждой новой фазой и передается
     * к следующей. В этом методе происходит подготовка бизнес-объектов перед сохранением.
     * Например, пересчет полей дат или счетчика текущего бизнес объекта
     */
    default BO preSave(BOCommand cmd) {
        return cmd.getBo();
    }

    /**
     * Метод вызывается после созданием/обновлением бизнес объекта. Объект изменяется с каждой новой фазой и передается
     * к следующей. В этом методе происходит изменение связанных с текущим бизнес-объектом бизнес объектов.
     * Например, пересчет дочерних элементов.
     */
    default BO postSave(BOCommand cmd) {
        return cmd.getBo();
    }

    /**
     * Метод вызывается перед удалением бизнес объекта. Объект изменяется с каждой новой фазой и передается
     * к следующей. В этом методе происходит подготовка бизнес-объектов к удалению.
     * Например, проверка возможности удалить объект
     */
    default BO preDelete(BOCommand cmd) {
        return cmd.getBo();
    }

    /**
     * Метод вызывается после удаления бизнес объекта. Объект изменяется с каждой новой фазой и передается
     * к следующей. В этом методе происходит изменение связанных с текущим бизнес-объектом бизнес объектов.
     * Например, удаление дочерних элементов.
     */
    default BO postDelete(BOCommand cmd) {
        return cmd.getBo();
    }
}
